ejercicio 2:

class Punto:
    def __init__(self, x, y):
        # Constructor que guarda los valores x e y
        self.x = x
        self.y = y

    def eje_x(self):
        # Devuelve el valor en el eje X
        return self.x

    def eje_y(self):
        # Devuelve el valor en el eje Y
        return self.y

    def impresion(self):
        # Devuelve una representación en texto del punto
        return f"({self.x}, {self.y})"

    def opuesto(self):
        # Devuelve un nuevo punto con los valores opuestos
        return Punto(-self.x, -self.y)

    def distancia_al_origen(self):
        # Devuelve la distancia del punto al origen (0, 0)
        return (self.x**2 + self.y**2) ** 0.5


ejercicio 3.

class Punto:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def mover_x(self, cantidad):
        self.x += cantidad

    def mover_y(self, cantidad):
        self.y += cantidad

    def impresion(self):
        return f"({self.x}, {self.y})"

class Linea:
    def __init__(self, punto_a, punto_b):
        # Constructor que guarda los dos puntos
        self._punto_a = punto_a
        self._punto_b = punto_b

    def mueve_derecha(self, distancia):
        # Mueve los dos puntos a la derecha (más en X)
        self._punto_a.mover_x(distancia)
        self._punto_b.mover_x(distancia)

    def mueve_izquierda(self, distancia):
        # Mueve los dos puntos a la izquierda (menos en X)
        self._punto_a.mover_x(-distancia)
        self._punto_b.mover_x(-distancia)

    def mueve_arriba(self, distancia):
        # Mueve los dos puntos hacia arriba (más en Y)
        self._punto_a.mover_y(distancia)
        self._punto_b.mover_y(distancia)

    def mueve_abajo(self, distancia):
        # Mueve los dos puntos hacia abajo (menos en Y)
        self._punto_a.mover_y(-distancia)
        self._punto_b.mover_y(-distancia)

    def mostrar_linea(self):
        # Muestra los dos puntos que forman la línea
        return f"Punto A: {self._punto_a.impresion()}, Punto B: {self._punto_b.impresion()}"

ejercicio 4.

class Cancion:
    def __init__(self, titulo, autor):
        # Constructor que guarda el título y el autor
        self.titulo = titulo
        self.autor = autor

    def get_titulo(self):
        # Devuelve el título de la canción
        return self.titulo

    def get_autor(self):
        # Devuelve el autor de la canción
        return self.autor

    def set_titulo(self, nuevo_titulo):
        # Cambia el título de la canción
        self.titulo = nuevo_titulo

    def set_autor(self, nuevo_autor):
        # Cambia el autor de la canción
        self.autor = nuevo_autor

ejercicio 5. 

class Persona:
    def __init__(self, nombre, apellido):
        self.nombre = nombre
        self.apellido = apellido

    def get_nombre_completo(self):
        return f"{self.apellido}, {self.nombre}"


class Libro:
    def __init__(self, titulo, autor, isbn, paginas, edicion, editorial, ciudad, pais, fecha_edicion):
        self.titulo = titulo
        self.autor = autor  # Esto es un objeto de la clase Persona
        self.isbn = isbn
        self.paginas = paginas
        self.edicion = edicion
        self.editorial = editorial
        self.ciudad = ciudad
        self.pais = pais
        self.fecha_edicion = fecha_edicion

    # Getters
    def get_titulo(self):
        return self.titulo

    def get_autor(self):
        return self.autor

    def get_isbn(self):
        return self.isbn

    def get_paginas(self):
        return self.paginas

    def get_edicion(self):
        return self.edicion

    def get_editorial(self):
        return self.editorial

    def get_ciudad(self):
        return self.ciudad

    def get_pais(self):
        return self.pais

    def get_fecha_edicion(self):
        return self.fecha_edicion

    # Setters
    def set_titulo(self, titulo):
        self.titulo = titulo

    def set_autor(self, autor):
        self.autor = autor

    def set_isbn(self, isbn):
        self.isbn = isbn

    def set_paginas(self, paginas):
        self.paginas = paginas

    def set_edicion(self, edicion):
        self.edicion = edicion

    def set_editorial(self, editorial):
        self.editorial = editorial

    def set_ciudad(self, ciudad):
        self.ciudad = ciudad

    def set_pais(self, pais):
        self.pais = pais

    def set_fecha_edicion(self, fecha):
        self.fecha_edicion = fecha

    # Método para mostrar la info
    def mostrar_info(self):
        print(f"Título: {self.titulo} {self.edicion} edición")
        print(f"Autor: {self.autor.get_nombre_completo()}")
        print(f"ISBN: {self.isbn}")
        print(f"{self.editorial}, {self.ciudad} ({self.pais})")
        print(self.fecha_edicion)
        print(f"{self.paginas} páginas")
        print("Clase 3. Unidad I.")
